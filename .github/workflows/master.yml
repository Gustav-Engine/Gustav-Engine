name: master

on:
  push:
    branches:
      - master
      - dev
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: write
  pull-requests: write

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Set up the environment
        uses: ./.github/actions/setup-poetry-env

      - name: Run checks
        run: make check

  pre-commit:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'synchronize' || github.repository == 'Horizon-Builder/Horizon-Builder'
    concurrency:
      group: pre-commit-${{ github.head_ref || github.run_id }}
      cancel-in-progress: true
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}

      - uses: pre-commit-ci/lite-action@v1.0.0
        if: always()

      - name: Run pre-commit
        uses: pre-commit/action@v3.0.1

  pytest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
      fail-fast: false
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Load cached venv
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          poetry install --with dev,docs,main --no-interaction

      - name: Test with pytest
        run: make test

      - name: Upload coverage reports to Codecov with GitHub Action on Python 3.11
        uses: codecov/codecov-action@v3
        if: ${{ matrix.python-version == '3.11' }}

  pyinstaller:
    if: github.event_name == 'push' && github.repository == 'Horizon-Builder/Horizon-Builder'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Setup options for PyInstaller
        id: config
        run: |
          echo "OPTIONS=$(make options)" >> $GITHUB_OUTPUT
          echo "SPEC=$(make spec)" >> $GITHUB_OUTPUT

      - name: Create Executable
        uses: sayyid5416/pyinstaller@v1
        with:
          python_ver: "3.11"
          spec: "${{ steps.config.outputs.SPEC }}"
          requirements: "src/requirements.txt"
          upload_exe_with_name: "Horizon Builder"
          options: ${{ steps.config.outputs.OPTIONS }}

  check-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Set up the environment
        uses: ./.github/actions/setup-poetry-env

      - name: Check if documentation can be built
        run: poetry run mkdocs build -s
